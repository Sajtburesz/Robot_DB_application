version: '3.8'

services:
  db:
    build:
      context: ./db
    stop_signal: SIGTERM
    volumes:
       - ./db/db_backup/backup.sql:/db_base/base.sql # Optional "backup.sql" file from previous instance of application
       - ./db/db_backup/:/db_backup/ # Backup folder location
    environment:
     - POSTGRES_DB=robot_db # Database Name
     - POSTGRES_USER=django_backend # Database User
     - POSTGRES_PASSWORD=super_secret_password # Database password for user
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: .
    expose:
      - 8000  # Port where backend will be exposed so nginx can communicate with it
    volumes:
      - static_volume:/robot_db/staticfiles # Static files don't touch
    environment:
     - SECRET_KEY=very_secret_key # Django secret
     - DEBUG=True # Debug option (Should be False in production env)
     - DB_HOST=db # Postgres DB host (if db is started with current docker-compose than don't touch)
     - DB_NAME=robot_db # Postgres DB name
     - DB_USER=django_backend # Postgres DB user
     - DB_PASSWORD=super_secret_password  # Postgres DB password
     - PORT=5432 # DB PORT  
     - CORS_ALLOWED_ORIGINS=http://localhost:8080 # Allowed hosts (should be the same as NGINX_HOST)
    depends_on:
      db:
        condition: service_healthy

  nginx:
    build:
      context: ./frontend
    ports:
      - "8080:80" # Port map where NGINX is listening (network port : docker port(don't touch))
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/robot_db/staticfiles  
    depends_on:
      - backend

volumes:
  static_volume: